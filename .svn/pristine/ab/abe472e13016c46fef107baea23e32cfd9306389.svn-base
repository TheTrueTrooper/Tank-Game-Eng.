using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CMPE2800Tank {
    abstract class Utility {

        /// <summary>
        /// Get angle between object 1 and object 2
        /// </summary>
        /// <param name="x1"></param>
        /// <param name="y1"></param>
        /// <param name="x2"></param>
        /// <param name="y2"></param>
        /// <returns>Angle in degrees</returns>
        public static float AngleTo(float x1, float y1, float x2, float y2) {
            return (float)Math.Atan2(y2 - y1, x2 - x1) * 180 / (float)Math.PI;
        }

        /// <summary>
        /// Create list of points representing a rectangle
        /// </summary>
        /// <param name="width"></param>
        /// <param name="height"></param>
        /// <returns></returns>
        public static PointF[] CreateRectangle(float width, float height) {
            List<PointF> points = new List<PointF>();
            points.Add(new PointF(height/2, width/2));//right top
            points.Add(new PointF(height/2, -width/2));//right bottom
            points.Add(new PointF(-height/2, -width/2));//left bottom   
            points.Add(new PointF(-height/2, width/2));//left top
            return points.ToArray();
        }

        public static PointF[] CreateCircle(float radius) {
            List<PointF> list = new List<PointF>();

            //create circle
            int numPoints = 12;
            double angle = 0.0;
            while (list.Count < numPoints) {
                list.Add(new PointF((float)(Math.Cos(angle) * radius), (float)(Math.Sin(angle) * radius)));
                angle += 2.0 * Math.PI / numPoints;
            }

            return list.ToArray();
        }
    }
}
